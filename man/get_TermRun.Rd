% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get-TermRun.R
\name{get_TermRun}
\alias{get_TermRun}
\title{Get terminal run size (wild)}
\usage{
get_TermRun(
  tau_W,
  W_star,
  B_star,
  brood_population = "Kitsumkalum",
  aggregate_population = "Skeena"
)
}
\arguments{
\item{tau_W}{Numeric, array of wild terminal mortalities with three dimensions:  population (i), year (y), and age (a).}

\item{W_star}{Numeric, array of wild spawner values with three dimensions:  population (i), year (y), and age (a).}

\item{B_star}{Numeric, array of number of brood stock adult Chinook taken from the Kitsumkalum river, by year (y) and age (a).}

\item{brood_population}{Character, name of population i with where brood removals occurred. Defaults to Kitsumkalum.}

\item{aggregate_population}{Character, name of population i that is the sum of the other populations. Defaults to Skeena. Brood also need to removed from this since brood population is part of the aggregate.}
}
\value{
List with two elements. First element: numeric, array of wild terminal run abundance, with dimensions population (i), year (y), and age (a).
Second element: data frame version of first element for plotting and tables.
}
\description{
Calculate the the terminal run size of wild Chinook by population, year, and age.
The terminal run is the number of wild Chinook that made it back to the terminal marine area, and thus
includes the wild total terminal mortalities (fish harvested in terminal areas including marine and river),
the wild spawners, and any wild fish removed for brood stock. Calculated by population (i), year (y) and age (a).
}
\examples{
library(abind)
d <- make_P_G(start_year = 2000, end_year = 2001)
res <- get_P_tilde(P = d$P, sigma_P = d$sigma_P, G = d$G)
k <- data.frame( year = c(2000, 2001),
                kitsumkalum_escapement = c(5000, 6000),
                sd = c(500, 400))
X <- get_X(P_tilde = res$P_tilde, sigma_P_tilde = res$sigma_P_tilde, K= k$kitsumkalum_escapement,
          sigma_K = k$sd, y = k$year)
Tau_U <- sample(50:100, size = length(k$year), replace=TRUE)
E <- get_E(K = k$kitsumkalum_escapement, X = X$X, Tau_U = Tau_U,
   known_population = "Kitsumkalum",
    aggregate_population = "Skeena",
    lower_populations = c("Lower Skeena", "Zymoetz-Fiddler"),
    upper_populations = c("Upper Skeena", "Middle Skeena", "Large Lakes"))
  populations <- c("Kitsumkalum", "Lower Skeena", "Zymoetz-Fiddler", "Upper Skeena", "Middle Skeena", "Large Lakes", "Skeena")
  n_populations <- length(populations)
  years <- 2000:2001
  n_years <- length(years)
  ages <- c(4,5,6)
  p_ages <- c(30,40,40)
  n_ages <- length(ages)
  # Make up some age data
  d <- sapply(p_ages, FUN = function(x){ rpois( n = n_populations*n_years, lambda= x) })
  n <- array( d,  dim = c(n_populations, n_years, n_ages), dimnames = list(i = populations, y = years, a = ages))
  omega <- get_omega(n)
  K_star <- array(runif(n = n_years * n_ages, 5000, 20000), dim = c(n_years, n_ages), dimnames= list(y = years, a = ages))
  E_star <- get_E_star(E = E$E, omega = omega$omega, K_star = K_star)
  B_star <- array(sample(1:50, size= n_years*n_ages), dim = c(n_years, n_ages), dimnames = list( y = years, a = ages))
  #B_star[,4] <- 0 # make age 7 brood = 0 so you don't get negative fish in S_star
  S_star <- get_S_star(E_star = E_star$E_star, B_star = B_star)
  H_star <- array(sample(10:40, size=n_years*n_ages), dim = c(n_years, n_ages), dimnames = list( y = years, a = ages))
  W_star <- get_W_star(S_star = S_star$S_star, H_star = H_star,
    aggregate_population = "Skeena", hatchery_population = "Kitsumkalum")
n_obs <- n_populations * n_years * n_ages
com_dims <- c(n_populations, n_years, n_ages)
com_dimnames <- list( i = populations, y= years, a = ages)
tau_U <- array( sample(0:1000, size = n_obs, replace=TRUE), dim = com_dims, dimnames = com_dimnames )
tau_L <- array( sample(0:500, size = n_obs, replace=TRUE), dim = com_dims, dimnames = com_dimnames)
tau_M <- array( sample(0:2000, size = n_obs, replace=TRUE), dim = com_dims, dimnames = com_dimnames)
tau <- get_tau( tau_U = tau_U, tau_L =tau_L, tau_M = tau_M)
p <- array( runif(length(tau$tau), 0.8, 1), dim= dim(tau$tau), dimnames = dimnames(tau$tau))
tau_W <- get_tau_W(tau = tau$tau, p = p)
TermRun <- get_TermRun(tau_W = tau_W$tau_W, W_star = W_star$W_star, B_star=B_star)


}
