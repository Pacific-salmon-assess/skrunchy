% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/df_to_array.R
\name{df_to_array}
\alias{df_to_array}
\title{Convert a data frame into an array.}
\usage{
df_to_array(df, value, dimnames_order, FUN = print, default = 0)
}
\arguments{
\item{df}{Dataframe input.}

\item{value}{Name of the dataframe variable to use for the array value.}

\item{dimnames_order}{Variable names to use for dimensions of the new array (in the order you want them to be in the array)}

\item{FUN}{Optional, function to use if there are more than 1 value for each combination of dimensions.
Default is print(). Note that if FUN is arithmetic and you want to ignore NA values, it must be specified
like FUN = function(x) \{ sum(x, na.rm=TRUE) \}}

\item{default}{Value to use if there are missing values for combinations of dimension. Default is 0.}
}
\value{
An array with values equal to the dataframe value column, dimensions and dimension names as supplied.
}
\description{
Takes a data frame and makes an array using a chosen variable as the array value, and other variables
from the data frame as dimensions. Variable names are used as the dimension names of the new array.
}
\examples{
i <- c(rep("A", 4), rep("B", 9), rep("C", 16))
y <- c(rep(2000:2001, each = 2), rep(2000:2002, each = 3), rep(2000:2003, each=4))
w <- c(rep(1:2, times = 2), rep(1:3, times = 3), rep(1:4, times = 4))
p <- runif(length(i), 0,1)
d <- data.frame(i, y, w, p)
arr <- df_to_array( df = d, value = "p", dimnames_order = c("i", "y", "w"))

# Handling NA values, need to specify na.rm=TRUE within function statement.
i <- c(rep("A", 4), rep("B", 9), rep("C", 16), rep("C", 16) )
y <- c(rep(2000:2001, each = 2), rep(2000:2002, each = 3), rep(2000:2003, each=4), rep(2000:2003, each=4))
w <- c(rep(1:2, times = 2), rep(1:3, times = 3), rep(1:4, times = 4),  rep(1:4, times = 4))
p <- c(runif(length(i)-8, 0,1), rep(NA, 8))
d <- data.frame(i, y, w, p)
arr <- df_to_array( df = d, value = "p", FUN = sum, dimnames_order = c("i", "y", "w"))
arr1 <- df_to_array( df = d, value = "p",
      FUN = function(x) {sum(x, na.rm=TRUE)}, dimnames_order = c("i", "y", "w"))
# Breaks if there are multiple values for any combination of dimensions.
arr <- df_to_array( df = d, value = "p", FUN = print, dimnames_order = c("i", "y", "w"))
}
